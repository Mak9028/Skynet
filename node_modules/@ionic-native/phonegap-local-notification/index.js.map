{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/phonegap-local-notification/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;;;;;IAW1G,mBAAY,KAAa,EAAE,OAAiC;QAC1D,EAAE,CAAC,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,SAAS,EAAE,IAAI,EAAE,yBAAyB,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAChH,IAAI,CAAC,eAAe,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACzD;KACF;IAGD,yBAAK,kBAAY;;QADhB,eAAe,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;0CACf;oBAnBnB;;SAQa,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuFyB,6CAAiB;;;;IAE9D;;;;;OAKG;;;;;;;IACH,0CAAM;;;;;;IAAN,UAAO,KAAa,EAAE,OAAiC,IAAI,MAAM,CAAC,IAAI,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE;IAElG;;;MAGE;;;;;IAEF,qDAAiB;;;;kBAAmB,MAAM,CAAC,EAAE;;gBAhB9C,UAAU;;;QAeR,OAAO,EAAE;;;;sEACmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAflC,yBAAyB;QARrC,MAAM,CAAC;YACN,UAAU,EAAE,8BAA8B;YAC1C,MAAM,EAAE,oCAAoC;YAC5C,SAAS,EAAE,cAAc;YACzB,IAAI,EAAE,gEAAgE;YACtE,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACpD,CAAC;OAEW,yBAAyB,EAiBrC;oCAhHD;EA+F+C,iBAAiB;SAAnD,yBAAyB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, CordovaInstance, Plugin, IonicNativePlugin, checkAvailability } from '@ionic-native/core';\n\ndeclare const Notification: any;\n\n/**\n * @hidden\n */\nexport class PLNObject {\n\n  private _objectInstance: any;\n\n  constructor(title: string, options: LocalNotificationOptions) {\n    if (checkAvailability(PhonegapLocalNotification.pluginRef, null, PhonegapLocalNotification.pluginName) === true) {\n      this._objectInstance = new Notification(title, options);\n    }\n  }\n\n  @CordovaInstance({ sync: true })\n  close(): void { }\n\n}\n\nexport interface LocalNotificationOptions {\n\n  /**\n   * Sets the direction of the notification. One of \"auto\", \"ltr\" or \"rtl\"\n   */\n  dir?: string;\n\n  /**\n   *  Sets the language of the notification\n   */\n  lang?: string;\n\n  /**\n   * Sets the body of the notification\n   */\n  body?: string;\n\n  /**\n   * Sets the identifying tag of the notification\n   */\n  tag?: string;\n\n  /**\n   * Sets the icon of the notification\n   */\n  icon?: string;\n\n}\n\n/**\n * @name Phonegap Local Notification\n * @description\n * The Local Notification plugin gives developers the ability to post notifications from their app that show up in the deviceâ€™s notification area.\n * The API for the local notification plugin follows the W3C Web Notifications specification: https://www.w3.org/TR/notifications/\n *\n * @usage\n * ```\n * import { PhonegapLocalNotification } from '@ionic-native/phonegap-local-notification';\n *\n *\n * constructor(private localNotification: PhonegapLocalNotification) { }\n *\n * ...\n *\n * this.localNotification.requestPermission().then(\n *   (permission) => {\n *     if (permission === 'granted') {\n *\n *       // Create the notification\n *       this.localNotification.create('My Title', {\n *         tag: 'message1',\n *         body: 'My body',\n *         icon: 'assets/icon/favicon.ico'\n *       });\n *\n *     }\n *   }\n * );\n *\n * ```\n *\n * @interfaces\n * LocalNotificationOptions\n */\n@Plugin({\n  pluginName: 'Phonegap Local Notifications',\n  plugin: 'phonegap-plugin-local-notification',\n  pluginRef: 'Notification',\n  repo: 'https://github.com/phonegap/phonegap-plugin-local-notification',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows']\n})\n@Injectable()\nexport class PhonegapLocalNotification extends IonicNativePlugin {\n\n  /**\n   * A global object that lets you interact with the Notification API.\n   * @param title {string} Title of the local notification.\n   * @param Options {LocalNotificationOptions} An object containing optional property/value pairs.\n   * @returns {PLNObject}\n   */\n  create(title: string, options: LocalNotificationOptions) { return new PLNObject(title, options); }\n\n  /**\n  * requests permission from the user to show a local notification.\n  * @returns {Promise<any>}\n  */\n  @Cordova()\n  requestPermission(): Promise<any> { return; }\n\n}\n"]}